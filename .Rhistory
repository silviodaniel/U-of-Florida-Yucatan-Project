#CHecking which localities from addresses2 are missing in urbana2
missing_urbana2=NULL
# missing_urbana4=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==F ){#if the address is not in urbana2 (==FALSE)
missing_urbana2[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
# View(which(!is.na(urbana2_hits)))#2715 urban hits ie the file names match up, out of 3291!
#Copy
# urbana4_hits=NULL
# for (i in seq(addresses2$LOCALIDAD)){
#   if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE==T ){#if the address is not in urbana2 (==FALSE)
#     urbana4_hits[i]=addresses2$LOCALIDAD[i]
#   }
#   else if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE){
#     next
#   }
# }
# urbana4_hits <- (which(!is.na(urbana4_hits)))
##Creating vector of municipios from addresses2 that are in rural file municipalities
nombre.municipios <- municipios$Nombre.del.Municipio
rural_hits=NULL
for (i in seq(addresses2$MUNICIPIO)){
if (addresses2$MUNICIPIO[i] %in% nombre.municipios==T){#if the municipality is in rural.shp
rural_hits[i]=addresses2$MUNICIPIO[i]
}
else {
next
}
}
# rural_hits <- (which(!is.na(rural_hits)))
length((unique(rural_hits)))#106 municipalities and all match!
# head(which(!is.na(urbana2_hits)))
#######################################################################################################
#Fixing up the mex2 data
# mex2$NAME_2 <- iconv(mex2$NAME_2,from="UTF-8",to="ASCII//TRANSLIT");View(mex2)
# #now, capitalizing
# mex2$NAME_2 <- toupper(mex2$NAME_2)
#
# #CHecking which localities from addresses2 are missing in mex2 (municipalities)
# missing_mex2=NULL
# for (i in seq(addresses2$MUNICIPIO)){
#   if (addresses2$MUNICIPIO[i] %in% mex2$NAME_2==F ){#if the address is not in urbana2 (==FALSE)
#     missing_mex2[i]=addresses2$MUNICIPIO[i]
#   }
#   else if (addresses2$MUNICIPIO[i] %in% mex2$NAME_2){
#     next
#   }
# }
#findings: there are 106 municipios, and they exactly match up with addresses2 number of municipios, along with
#number of polygons so each polygon corresponds exactly to 1 municipio
###############################################################################################
####################################################################################################
##TO COUNT HOW MANY additional SCHOOL HITS FROM urbana2 by LOCALITY NAME
#for each i, change the addresses2_hits for that value i position (urbana2_hits[i]) to "success"
#for i in addresses2_hits, if if that ith position is equal to one
# of the position numbers in addresses2_hits, AND
#urbana2_hits$HITS contains ZERO_RESULTS, and , then replace that value with "locality matches!"
#Creating vector of localities from addresses2 that are in urbana2
urbana2_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==T ){#if the address is not in urbana2 (==FALSE)
urbana2_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
urbana2_hits <- (which(!is.na(urbana2_hits)))
#new modified addresses with hits from Linux
####
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F)#;View(addresses2_hits)
for (i in seq(length(addresses2_hits$LAT_HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$LAT_HITS[i]))==T){
addresses2_hits$LAT_HITS[i] <- "locality matches!" #phrase: "locality matches!"
addresses2_hits$LNG_HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
##TO COUNT HOW MANY additional SCHOOL HITS for municipalities (just those left over)
for (i in seq(length(addresses2_hits$LAT_HITS))){
if ((grepl("ZERO_RESULTS",addresses2_hits$LAT_HITS[i]))==T){
addresses2_hits$LAT_HITS[i] <- "municipality matches!" #phrase: "municipality matches!"
addresses2_hits$LNG_HITS[i] <- "municipality matches!" #phrase: "municipality matches!"
}
}
View(addresses2_hits)
View(rural)
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
plot(placeholder$geometry[253])
plot(placeholder$geometry[254])
plot(placeholder$geometry[253])
plot(placeholder$geometry[255])
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
rural <- rural[-317,]
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
rural <- rural[-c(317,306,327),]##########????????????????????have this???????????
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
################################################################################
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
plot(placeholder$geometry[253])
plot(placeholder$geometry[255])
head(placeholder$geometry[253])
st_coordinates(placeholder[253])
st_coordinates(placeholder[253,])
st_coordinates(placeholder$geometry[253])
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
st_coordinates(placeholder$geometry[253])
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
length(mun)
View(mun)
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
st_coordinates(placeholder$geometry[797])
plot(rural$geometry[277:278])
plot(rural$geometry[c(277,278,279,280)])
plot(rural$geometry[277:329])
plot(rural$geometry[300])
plot(rural$geometry[300:301])
c(277:299,301:329)
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
rural <- rural[-c(277:299,301:329)]
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO#this is the municipality vector matching up with addresses from schools,
#so 543 municipio coordinates needed
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
################################################################################
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
rural <- rural[-c(277:299,301:329)]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
rural <- rural[-c(277:299,301:329)]
# rural <- rural[-c(317,306,327),]####
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO#this is the municipality vector matching up with addresses from schools,
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
rural <- rural[-c(277:299,301:329)]
View(rural)
rural[-c(277:299,301:329)]
#View(rural)
rural <- rural[-c(277:299,301:329),]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
rural <- rural[-c(277:299,301:329),]
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO#this is the municipality vector matching up with addresses from schools,
#so 543 municipio coordinates needed
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
################################################################################
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
# placeholder$mun.coords <- NULL
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,22.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(schools$x,schools$y,pch= 20, col='blue',lwd=2)#schools enlarged (pch=20)
rural<-st_read(paste0(rootdir,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
# rural <- rural[-c(277:299,301:329),]#fixi
rootdir="C:/Users/Silvio/Documents/GitHub/"
rootdir1="C:/Users/Silvio/Documents/"
rootdir2="C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/"
mapdir1="U-of-Florida-Yucatan-Project/Shapefiles/"
mapdir3="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir2="encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project"))
rural<-st_read(paste0(rootdir,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
# rural <- rural[-c(277:299,301:329),]#fixing
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,22.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(schools$x,schools$y,pch= 20, col='blue',lwd=2)#schools enlarged (pch=20)
loc.placeholder <- subset(addresses2_hits,(grepl("locality matches!",addresses2_hits$LAT_HITS)))
urbana2_subset <- data.frame(LOCALIDAD = urbana2$nombre,geometry = urbana2$geometry)
loc.placeholder <- left_join(loc.placeholder,urbana2_subset)#good, 1373 hits now
target=1
n <- 0
loc.coord.vector <- c()
#For every school that only identified by locality, get random coords from that locality
for (i in seq(loc.placeholder$LOCALIDAD)){#
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(loc.placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) loc.coord.vector <- append(loc.coord.vector,rand.coords[1])#append each time
}
}
loc.coords <- st_coordinates(loc.coord.vector[1:length(loc.placeholder$LOCALIDAD)]);View(loc.coords)
loc.coords <- as.data.frame(loc.coords)
loc.placeholder$loc.coords <- loc.coords[1:length(loc.placeholder$LOCALIDAD),]
##################################################################
#NOW, REPLACE ALL VALUES IN ADDRESSES2_HITS WITHOUT COORDS
#Municipios start at 2748 and go until 3290
#Localities start at 1375 and go until 2747
# addresses2_hits[3290,]
addresses2_hits$LAT_HITS[2748:3290] <- mun.coords$Y
addresses2_hits$LNG_HITS[2748:3290] <- mun.coords$X
addresses2_hits$LAT_HITS[1375:2747] <- loc.coords$Y
addresses2_hits$LNG_HITS[1375:2747] <- loc.coords$X
addresses2_hits$LAT_HITS[1] <- 20.9491951
addresses2_hits$LNG_HITS[1] <- -89.66059559999999
schools2_x <- as.numeric(addresses2_hits$LAT_HITS)
schools2_y <- as.numeric(addresses2_hits$LNG_HITS)
write.table(addresses2_hits,"addresses_updated.txt",sep="\t",row.names = F)
7/40
4/.44
7/.44
16
6
16+6+22+58
7/16
14/22
.45*72+.1*78
(.45*72+.1*78)/200
(.25*84+.1*98)/200
.45*72+.1*78
(.25*84+.75*98)/200
(.25*84+.75*98)
(2+51)/582
(1+4+1+4)/(146+128+96+500)
10/770
10/870
53/582
(6+97+24+51)/(300+29530+16157+1338)
(6+97+24+51)
(300+29530+16157+1338)
(6+97+24+51)/(300+29530+16157+1338)
(6+97+24+51)/(300+29530+16157+1338)/2
(6+97+24+51)/(300+29530+16157+1338)
3/58
3/64
6/73
6/72
(.2353*51+.05*2881)/(2881+51)
6+97+24+51
300+29530+16157+1338
(.2353*51+.05*2881)/(2881+51)
(.2353*51+.05*2881)
(.067*119+.04097*781)/(119+781)
(119+781)
(.067*119+.04097*781)
86/2881
(13+4+5+0)/(128+496+527+145)
(128+496+527+145)
(13+4+5+0)/(128+496+527+145)
2/151
24/1447
(13+4+5+0+2)/(128+496+527+145+151)
(128+496+527+145+151)
485-117
101/.208
101/367
3/.6
3/.006
3/485
267-485
29/368
19/1111
1030/1092
3/196
716/1111
7/16
23/74
231/16816
.0131*16484
565/4261
