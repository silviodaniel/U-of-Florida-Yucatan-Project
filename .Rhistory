(p.cw.d <- 2*(1-pt(abs(t.cw.d),n.cw.d-1)))    ### P-value
## 95% CI for mu_D = mu_F-mu_S
mean.cw.d + qt(c(.025,.975),n.cw.d-1)*sd.cw.d/sqrt(n.cw.d)
## Paired t-test using t.test function
t.test(flow,still,paired=T)
mp <- read.csv("http://www.stat.ufl.edu/~winner/data/mosquito_patch.csv")
attach(mp); names(mp)
trt.mosq <- factor(trt.mosq)
(ybar <- as.vector(tapply(y.mosq,trt.mosq,mean)))
(sd <- as.vector(tapply(y.mosq,trt.mosq,sd)))
(n <- as.vector(tapply(y.mosq,trt.mosq,length)))
(r <- length(ybar))
(SSE <- sum((n-1)*sd^2))
(dfE <- sum(n)-r)
(MSE <- SSE/dfE)
(SSTR <- sum(n*(ybar-mean(y.mosq))^2))
(dfTR <- r-1)
(MSTR <- SSTR/dfTR)
(F_star <- MSTR/MSE)
(F_05 <- qf(.95,dfTR,dfE))
(F_p <- 1-pf(F_star,dfTR,dfE))
### Contrasts
## Contrast 1: (D & D+O) vs (C & C+O)
LC1 <- c(0, 1, -1, 1, -1)
(C1 <- sum(LC1*ybar))
(se.C1 <- sqrt(MSE*(sum(LC1^2/n))))
sum(LC1^2/n)
LC1^2
LC1^2/n
LC1^2/n
n
####
60+t(c(.05/2,1-.05/2),15)*10
####
60+qt(c(.05/2,1-.05/2),15)*10
(t.C1 <- C1/se.C1)
(t.C1.p <- 2 * (1-pt(abs(t.C1),dfE)))
(C1.CI <- c1 + qt(c(.025,.975),dfE) * se.C1)
(SSC1 <- C1^2 / sum(LC1^2/n))
(F.C1 <- SSC1 / MSE)
(C1.CI <- C1 + qt(c(.025,.975),dfE) * se.C1)
(SSC1 <- C1^2 / sum(LC1^2/n))
(F.C1 <- SSC1 / MSE)
(F.C1.p <- 1 - pf(F.C1,1,dfE))
attach(cw2); names(cw2)
### Linear Regression
## Complete Model (X1=1 if flow, 0 if still, X2-X9 are dummy vars for cats 1-8
cat.mod1 <- lm(h2o ~ X1+X2+X3+X4+X5+X6+X7+X8+X9)
summary(cat.mod1)
anova(cat.mod1)
confint(cat.mod1)
########################################################################
kids <- read.csv("http://www.stat.ufl.edu/~winner/data/kid_calories.csv")
attach(kids); names(kids)
head(kids)
## Create Dummy variable for kid participating in meal preparation
Participate <- 2-Trt    # Trt=1 means participated Trt=2 means did not
### Fit simple linear regression relating Calories (Y) to Participate (X)
meal.mod <- lm(Calories ~ Participate)
summary(meal.mod)
confint(meal.mod)
### Conduct independent sample t-test (Equal Vars) -- Direct Calculations
### Group 1 ==> Participated (Trt=1)  Group 2 ==> Not Participated (Trt=2)
(ybar1 <- mean(Calories[Trt==1]))   ### Mean for Group 1
(s1 <- sd(Calories[Trt==1]))        ### SD for Group 1
(n1 <- length(Calories[Trt==1]))    ### n for Group 1
(ybar2 <- mean(Calories[Trt==2]))   ### Mean for Group 2
(s2 <- sd(Calories[Trt==2]))        ### SD for Group 2
(n2 <- length(Calories[Trt==2]))    ### n for Group 2
(s_p <- sqrt(((n1-1)*s1^2 + (n2-1)*s2^2)/(n1+n2-2)))   ### Pooled sd
(t.meal <- (ybar1-ybar2)/(s_p*sqrt(1/n1+1/n2)))   ### t-stat
(p.meal <- 2*(1-pt(abs(t.meal),n1+n2-2)))         ### P-value
abs(t.meal)
t.meal
abs(t.meal)>qt(1-.05/2,n1+n2-2)
qt(1-.05/2,n1+n2-2)
summary(meal.mod)
s_p
head(kids)
head(cw2)
head(cw1)
cw2
head(cw2)
hello
cw2 <- read.csv("http://www.stat.ufl.edu/~winner/data/cat_water2.csv")
attach(cw2); names(cw2)
### Linear Regression
## Complete Model (X1=1 if flow, 0 if still, X2-X9 are dummy vars for cats 1-8
cat.mod1 <- lm(h2o ~ X1+X2+X3+X4+X5+X6+X7+X8+X9)
summary(cat.mod1)
anova(cat.mod1)
confint(cat.mod1)
## Reduced Model (Only Dummy for flow included)
cat.mod2 <- lm(h2o ~ X1)
summary(cat.mod2)
anova(cat.mod2)
## Test for "Cat Effects"
anova(cat.mod2, cat.mod1)
anova(cat.mod2)
summary(cat.mod2)
bmi.sim <- read.csv("http://www.stat.ufl.edu/~winner/data/nhl_nba_ebl_bmi.csv")
attach(bmi.sim); names(bmi.sim)
N <- rep(0,3)
N[1] <- 717
N[2] <- 505
N[3] <- 526
NHL_BMI <- NHL_BMI[1:N[1]]
NBA_BMI <- NBA_BMI[1:N[2]]
EPL_BMI <- EPL_BMI[1:N[3]]
par(mfrow=c(3,1))
hist(NHL_BMI,breaks=25)
hist(NBA_BMI,breaks=25)
hist(EPL_BMI,breaks=25)
par(mfrow=c(1,1))
sigma <- rep(0,3)
(sigma[1] <- sd(NHL_BMI))
(sigma[2] <- sd(NBA_BMI))
(sigma[3] <- sd(EPL_BMI))
(sigma_p <- sqrt((sigma[1]^2+sigma[2]^2+sigma[3]^2)/3))
mu <- rep(0,3)
(mu[1] <- mean(NHL_BMI))
(mu[2] <- mean(NBA_BMI))
(mu[3] <- mean(EPL_BMI))
(mu_c <- (mu[1]+mu[2]+mu[3])/3)
sampsz <- rep(3,0)
sampsz[1] <- 5
sampsz[3] <- 5
sampsz[2] <- 5
sumssz <- sum(sampsz)
(lambda <- (sampsz[1]*(mu[1]-mu_c)^2 + sampsz[2]*(mu[2]-mu_c)^2 +
sampsz[3]*(mu[3]-mu_c)^2) / sigma_p^2 )
sqrt((1.45^2+1.72^2+1.71^2)/3)
num.trt <- length(sampsz)
f.crit <- qf(.95,num.trt-1,sumssz-num.trt)
f <- seq(0,8,length=801)
cf <- df(f,num.trt-1,sumssz-num.trt)
ncf <- df(f,num.trt-1,sumssz-num.trt,lambda)
plot(f,cf,type="l")
lines(f,ncf,lty=2)
abline(v=f.crit)
(power.f <- 1-pf(f.crit,num.trt-1,sumssz-num.trt,lambda))
plot(f,cf,type="l")
lines(f,ncf,lty=2)
abline(v=f.crit)
(mu1=sum(c(54.04,54.44,62.29,59.63,62.9,65.56))/6)
th=data.frame(group=c(rep(1,6),rep(2,6),rep(3,6)),output=c(54.04,54.44,62.29,59.63,62.9,65.56,
67.76,70.75,76.3,74.11,75.11,70.40,51.76,48.9,54.68,39.24,53.1,50))
(ybar <- as.vector(tapply(output,group,mean)))
(sd <- as.vector(tapply(output,group,sd)))
(n <- as.vector(tapply(output,group,length)))
(r <- length(ybar))
(ybar_output=mean(output))
(SSE <- sum((n-1)*sd^2))
(dfE <- sum(n)-r)
(MSE <- SSE/dfE)
(SSTR <- sum(n*(ybar-ybar_output)^2))
(dfTR <- r-1)
(SST=SSTR+SSE)
(MSTR <- SSTR/dfTR)
(F_star <- MSTR/MSE)
(F_05 <- qf(.95,dfTR,dfE))
(F_p <- 1-pf(F_star,dfTR,dfE))
dfTR
dfE
(F_p <- 1-pf(F_star,dfTR,dfE))
#Contrast test
LC1 <- c(1,-1,-1)
(C1 <- sum(LC1*ybar))
(se.C1 <- sqrt(MSE*(sum(LC1^2/n))))
(t.C1 <- C1/se.C1)
(t.C1.p <- 2 * (1-pt(abs(t.C1),dfE)))
(C1.CI <- C1 + qt(c(.025,.975),dfE) * se.C1)
(SSC1 <- C1^2 / sum(LC1^2/n))
(F.C1 <- SSC1 / MSE)
(F.C1.p <- 1 - pf(F.C1,1,dfE))
F.C1
qf(.95,1,15)
qf(.95,1,dfE)
#Bonferroni
(se=sqrt(MSE*(1/6+1/6)))
bon.t*se#seems too large, 7.13, but then again small sample size
### Scheffe method
SSE <- sum((n-1)*sd^2)
dfE <- sum(n)-r
MSE <- SSE/dfE
schef.f <- sqrt((r-1)*qf(1-.05,r-1,dfE))
#Scheffe's
schef.f*se
#Bonferroni
(se=sqrt(MSE*(1/6+1/6)))
bon.t*se#seems too large, 7.13, but then again small sample size
#Bonferroni
(se=sqrt(MSE*(1/6+1/6)))
bon.t*se#7.13
schef.f <- sqrt((r-1)*qf(1-.05,r-1,dfE))
#Scheffe's
schef.f*se
#Tukey's
q=qtukey(.95,r,dfE)
hsd=q*se/sqrt(2)
(hsd=q*se/sqrt(2))
#Tukey's
q=qtukey(.95,r,dfE)
(hsd=q*se/sqrt(2))
#AB
AB=59.81-72.405;AB
tukey.CI=AB+c(-hsd,hsd)
tukey.CI
bon.t <- qt(1-.05/(2*r*(r-1)/2),dfE)
bon.out <- matrix(rep(0,5*r*(r-1)/2),ncol=5)
bon.row <- 0
for(i1 in 1:(r-1)) {
for (i2 in (i1+1):r) {
bon.row <- bon.row + 1
bon.out[bon.row,1] <- i1
bon.out[bon.row,2] <- i2
bon.out[bon.row,3] <- ybar[i1] - ybar[i2]
bon.out[bon.row,4] <-
(ybar[i1] - ybar[i2]) - bon.t*sqrt(MSE*(1/n[i1] + 1/n[i2]))
bon.out[bon.row,5] <-
(ybar[i1] - ybar[i2]) + bon.t*sqrt(MSE*(1/n[i1] + 1/n[i2]))
}}
colnames(bon.out) <- c("Trt i","Trt j","Diff","Lower Bound","Upper Bound")
round(bon.out,3)
(bonferroni.CI=AB+c(-bon.t,bon.t))
AB
### Scheffe method
SSE <- sum((n-1)*sd^2)
dfE <- sum(n)-r
MSE <- SSE/dfE
schef.f <- sqrt((r-1)*qf(1-.05,r-1,dfE))
schef.out <- matrix(rep(0,5*r*(r-1)/2),ncol=5)
schef.row <- 0
for(i1 in 1:(r-1)) {
for (i2 in (i1+1):r) {
schef.row <- schef.row + 1
schef.out[schef.row,1] <- i1
schef.out[schef.row,2] <- i2
schef.out[schef.row,3] <- ybar[i1] - ybar[i2]
schef.out[schef.row,4] <-
(ybar[i1] - ybar[i2]) - schef.f*sqrt(MSE*(1/n[i1] + 1/n[i2]))
schef.out[schef.row,5] <-
(ybar[i1] - ybar[i2]) + schef.f*sqrt(MSE*(1/n[i1] + 1/n[i2]))
}}
colnames(schef.out) <- c("Trt i","Trt j","Diff","Lower Bound","Upper Bound")
round(schef.out,3)
(scheffe.CI=AB+c(-schef.f,schef.f))
ybar
ybar[i1] - ybar[i2]
(ybar[i1] - ybar[i2])
AB
MSE
(tukey.CI=BC+c(-hsd,hsd))
(bonferroni.CI=BC+c(-bon.t,bon.t))
(scheffe.CI=BC+c(-schef.f,schef.f))
round(schef.out,3)
(ybar[i1] - ybar[i2])
schef.f
sqrt(MSE*(1/n[i1] + 1/n[i2]))
se
schef.f
schef.f
schef.f <- sqrt((r-1)*qf(1-.05,r-1,dfE))
schef.f
(tukey.CI=AB+c(-hsd,hsd)*se)
(hsd=q*se/sqrt(2))
(tukey.CI=AB+c(-hsd,hsd))
schef.out[schef.row,4] <-
(ybar[i1] - ybar[i2]) - schef.f*sqrt(MSE*(1/n[i1] + 1/n[i2]))
round(schef.out,3)
(tukey.CI=AB+c(-hsd,hsd))
(scheffe.CI=AB+c(-schef.f,schef.f))
(bonferroni.CI=AB+c(-bon.t,bon.t))
#Scheffe's
s.msd=schef.f*se
(scheffe.CI=AB+c(-schef.f,schef.f)*s.msd)
schef.f
(scheffe.CI=AB+c(-schef.f,schef.f)*se)
round(bon.out,3)
(bonferroni.CI=AB+c(-bon.t,bon.t)*se)
(tukey.CI=AB+c(-hsd,hsd))
#AB
AB=59.81-72.405;AB
(tukey.CI=AB+c(-hsd,hsd))
(bonferroni.CI=AB+c(-bon.t,bon.t)*se)
(scheffe.CI=AB+c(-schef.f,schef.f)*se)
(scheffe.CI=AB+c(-schef.f,schef.f)*se)
(scheffe.CI=AB+c(-s.msd,s.msd)
(scheffe.CI=AB+c(-s.msd,s.msd))
(qstar.tukey=abs(sqrt(2)*AB/se))
sdalofj
(scheffe.CI=AB+c(-s.msd,s.msd))
(bon.msd=bon.t*se)#7.13
bonferroni.CI
(bonferroni.CI=AB+c(-bon.msd,bon.msd))
#AC
AC=59.81-49.61333;AC
(tukey.CI=AC+c(-hsd,hsd))
(bonferroni.CI=AC+c(-bon.msd,bon.msd))
(scheffe.CI=AC+c(-s.msd,s.msd))
#BC
BC=72.405-49.61333;BC
(tukey.CI=BC+c(-hsd,hsd))
(bonferroni.CI=BC+c(-bon.msd,bon.msd))
(scheffe.CI=BC+c(-s.msd,s.msd))
round(schef.out,3)
round(bon.out,3)
TukeyHSD(beer.mod1,"brand")
beer=read.csv("beer_phenols.csv",header=T)
attach(beer)
#Tukey/Bonferroni
beer.mod1=aov(polyphenols~brand)
anova(beer.mod1)
TukeyHSD(beer.mod1,"brand")
#Bartlett
Y=output
output
group_f=factor(group)
bartlett.test(Y ~ group_f)       ### Bartlett's Test of equal variance
chisq(.05,2)
pchisq(.05,2)
qchisq(.05,2)
qchisq(.05,2)
qchisq(.95,2)
island = get_map(location = c(lon = -63.247593, lat = 17.631598), zoom = 13, maptype = "satellite")
islandMap = ggmap(island, extent = "panel", legend = "bottomright")
RL = geom_point(aes(x = longitude, y = latitude), data = data, color = "#ff0000")
islandMap + RL +
scale_x_continuous(limits = c(-63.280, -63.21), expand = c(0, 0)) +
scale_y_continuous(limits = c(17.605, 17.66), expand = c(0, 0)) +
########### add circles
geom_polygon(data = myCircles, aes(lon, lat, group = ID), color = "red", alpha = 0)
islandMap + RL +
scale_x_continuous(limits = c(-63.280, -63.21), expand = c(0, 0)) +
scale_y_continuous(limits = c(17.605, 17.66), expand = c(0, 0)) +
geom_point(aes(x = longitude, y = latitude), data = data, size = 20, shape = 1,  color = "#ff0000")
#R maps review
# install.packages("maps")
library(maps)
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)
lines(r*cos(angles)+x,r*sin(angles)+y)
}
coords <- data.frame(x = c(-1,0,1), y = c(-1, 0.5, 1))
plot(1,type='n',xlim=c(-2,2),ylim=c(-2,2))
apply(coords,1,function(df) plotCircle(df[1],df[2],.3))
library(cartography)
setwd("C:/Users/Silvio/Documents/R/Yucatan-Project")
# install.packages("cluster")
library(cluster)
# install.packages("dplyr")
library(dplyr)
#reading files necessary
py=read.table(file="pop-yucatan/population-yucatan.txt",header = T)
ly<-read.table(file="pop-yucatan/locations-yucatan.txt",header=TRUE)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
head(py)
##
# urbana <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_urbana.shp"
#                , quiet = TRUE)#encuesta intercensal
# rural<- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_rural.shp"
#                 , quiet = TRUE)#Encuesta intercensal
mex0=st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/MEX_adm/MEX_adm0.shp",
quiet=T)#Diva-GIS
mex1=st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/MEX_adm/MEX_adm1.shp",
quiet=T)#Diva-GIS
# class(urbana)
# plot(st_geometry(urbana))#from encuesta file
##
#Map of Yucatan
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(mex1[31,]),add=T,col="#99FF99")#adds green color to
#Yucatan boundary
# plot(st_geometry(rural),lwd=.5,add=T,col="#FFFFFF")
# plot(st_geometry(urbana),lwd=.5,add=T,col="#000000")
# plot(st_geometry(urbana),lwd=.5,add=T,col=4)
# plot(st_geometry(urbana),lwd=.5,add=T,col="#FF8C00")
axis(1)#adds in long and lat axes
axis(2)
grid()
abline(h=seq(19,22,0.1))
abline(v=seq(-91,-87,0.1))
#Just add below code to above plot of Yuc (empty green area, mex0 and mex1)
schools = ly[ly$type=='school',]
points(schools$x,schools$y,pch='.',col='blue')
#
students=py[py$age>4 & py$age<18,]
points(students$x1,students$y1,pch='.',col='red')
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)
lines(r*cos(angles)+x,r*sin(angles)+y)
}
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)
lines(r*cos(angles)+x,r*sin(angles)+y)
}
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)
lines(r*cos(angles)+x,r*sin(angles)+y)
}
plotCircle(-89,20,0.25)
plotCircle(-89,20,0.5)
pi
rm(pi)
pi
plotCircle(-89,20,0.5)
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)
lines(r*cos(angles)+x,r*sin(angles)+y)
}
12742/2
rm(pi)
hav=function(x1,y1,x2,y2){
#convert degrees to radians by multiplying by pi, dividing by 180
#y's should be latitudes and x's should be longitudes
return(12742 *asin(sqrt((sin(pi/180*(y2-y1)/2))^2
+cos(pi/180*y1)*cos(pi/180*y2)*(sin(pi/180*(x2-x1)/2))^2)))
}
hav(-89.6848792716 ,20.6464119922,-89.0323486633, 20.8012998636)#=70.01462
hav(-90,20,-89,20)
hav(-90,20,-90,21)
hav(-90,0,-90,1)
hav(-90,0,-89,1)
hav(-90,0,-89,0)
hav(-90,89,-90,90)
hav(-90,90,-89,90)
#Example
plot(1:100,type='n')
lines(c(0,0,20,0),c(0,20,20,0))
rootdir="C:/Users/Silvio/Documents/"
setwd(paste(,rootdir"GitHub/U-of-Florida-Yucatan-Project"))
setwd(paste(rootdir,"GitHub/U-of-Florida-Yucatan-Project"))
rootdir
paste(rootdir,"GitHub/U-of-Florida-Yucatan-Project")
paste0(rootdir,"GitHub/U-of-Florida-Yucatan-Project")
setwd(paste0(rootdir,"GitHub/U-of-Florida-Yucatan-Project"))
paste0(rootdir,"ArcGIS Explorer/")
mapdir=paste0(rootdir,"ArcGIS Explorer/My Basemaps/MEX_adm/")
##
# urbana <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_urbana.shp"
#                , quiet = TRUE)#encuesta intercensal
# rural<- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_rural.shp"
#                 , quiet = TRUE)#Encuesta intercensal
mex0=st_read(paste0(rootdir,mapdir,"MEX_adm0.shp")
quiet=T)#Diva-GIS
paste0(rootdir,mapdir,"MEX_adm0.shp")
mapdir
mapdir="ArcGIS Explorer/My Basemaps/MEX_adm/"
##
# urbana <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_urbana.shp"
#                , quiet = TRUE)#encuesta intercensal
# rural<- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_rural.shp"
#                 , quiet = TRUE)#Encuesta intercensal
mex0=st_read(paste0(rootdir,mapdir,"MEX_adm0.shp")
quiet=T)#Diva-GIS
paste0(rootdir,mapdir,"MEX_adm0.shp")
##
# urbana <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_urbana.shp"
#                , quiet = TRUE)#encuesta intercensal
# rural<- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_rural.shp"
#                 , quiet = TRUE)#Encuesta intercensal
mex0=st_read(paste0(rootdir,mapdir,"MEX_adm0.shp"),
quiet=T)#Diva-GIS
mex1=st_read(paste0(rootdir,mapdir,"MEX_adm1.shp"),
quiet=T)#Diva-GIS
#reading files necessary
py=read.table(paste0(rootdir,"R/Yucatan-Project/pop-yucatan/population-yucatan"),header = T)
paste0(rootdir,"R/Yucatan-Project/pop-yucatan/population-yucatan")
#reading files necessary
py=read.table(paste0(rootdir,"R/Yucatan-Project/pop-yucatan/population-yucatan.txt"),header = T)
ly<-read.table(paste0(rootdir,"R/Yucatan-Project/pop-yucatan/locations-yucatan.txt",header=T)
)
paste0(rootdir,"R/Yucatan-Project/pop-yucatan/locations-yucatan.txt"
)
ly<-read.table(paste0(rootdir,"R/Yucatan-Project/pop-yucatan/locations-yucatan.txt"),header=T))
ly<-read.table(paste0(rootdir,"R/Yucatan-Project/pop-yucatan/locations-yucatan.txt"),header=T)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
head(py)
##
#Map of Yucatan
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(mex1[31,]),add=T,col="#99FF99")#adds green color to
axis(1)#adds in long and lat axes
axis(2)
#Just add below code to above plot of Yuc (empty green area, mex0 and mex1)
schools = ly[ly$type=='school',]
points(schools$x,schools$y,pch='.',col='blue')
#
students=py[py$age>4 & py$age<18,]
points(students$x1,students$y1,pch='.',col='red')
points(schools$x,schools$y,pch='.',col='blue')
plotCircle <- function(x, y, r) {
angles <- seq(0,2*pi,length.out=360)#between 0 and 2pi
lines(r*cos(angles)+x,r*sin(angles)+y)#start at x and y and add
}#This output is Cartesian not lat long, so have to fix this
plotCircle(-89,20,0.5)
12742/2
pi*1:2
