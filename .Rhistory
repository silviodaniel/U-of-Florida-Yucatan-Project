rm(list=ls())
url <- function(address, return.call = "json", sensor = "false") {
root <- "https://maps.googleapis.com/maps/api/geocode/"
u <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(u))
}
geoCode <- function(address,verbose=FALSE) {
if(verbose) cat(address,"\n")
u <- url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
location_type <- x$results[[1]]$geometry$location_type
formatted_address <- x$results[[1]]$formatted_address
return(c(lat, lng, location_type, formatted_address))
Sys.sleep(0.5)
} else {
return(c(NA,NA,NA,NA))
}
}
# Use plyr to ggeocoding for a vector
address <- c("The White House, Washington, DC", "The Capitol, Washington, DC")
locations <- ldply(address, function(x) geoCode(x))
names(locations) <- c("lat", "lon", "location_type", "formatted")
head(locations)
address
library(cartography)
rootdir="C:/Users/Silvio/Documents/GitHub/"
rootdir1="C:/Users/Silvio/Documents/"
rootdir2="C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/"
mapdir1="U-of-Florida-Yucatan-Project/Shapefiles/"
mapdir3="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir2="encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
setwd(paste0(rootdir,"GitHub/U-of-Florida-Yucatan-Project"))
# install.packages("cluster")
library(cluster)
# install.packages("dplyr")
library(dplyr)
#reading files necessary
py=read.table(paste0(rootdir1,"R/Yucatan-Project/pop-yucatan/population-yucatan.txt"),header = T)
ly<-read.table(paste0(rootdir1,"R/Yucatan-Project/pop-yucatan/locations-yucatan.txt"),header=T)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
encuesta<-read.csv(paste0(rootdir,mapdir2,"catalogos/localidades urbanas y rurales amanzanadas.csv"),
header=T)
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
urbana2$nombre[162] <- "CHOLUL MERIDA"; urbana2$nombre[1] <- "TEMOZON ABALA"
urbana2 <- urbana2[-c(43,61,102,153,242,295),]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project"))
encuesta<-read.csv(paste0(rootdir,mapdir2,"catalogos/localidades urbanas y rurales amanzanadas.csv"),
header=T)
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
urbana2$nombre[162] <- "CHOLUL MERIDA"; urbana2$nombre[1] <- "TEMOZON ABALA"
urbana2 <- urbana2[-c(43,61,102,153,242,295),]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
# length(unique(urbana$C
paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp")
rural<-st_read(paste0(rootdir,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
mex0=st_read(paste0(rootdir,mapdir1,"MEX_adm0.shp"),
quiet=T)#Diva-GIS
mex1=st_read(paste0(rootdir,mapdir1,"MEX_adm1.shp"),
quiet=T)#Diva-GIS
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(mex1[31,]),add=T,col="#99FF99")#adds green color to
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
students=py[py$age>4 & py$age<18,]
schools = ly[ly$type=='school',]
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
png("Pictures/py_students_schools.png", width=2400, height=1600, res=240)
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
dev.off()
png("Pictures/py_students_schools_enlarged_schools.png", width=2400, height=1600, res=240)
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
# points(schools$x,schools$y,pch='.',col='blue')
points(schools$x,schools$y,pch= 20, col='blue',lwd=0.5)#schools enlarged (pch=20)
# points(schools2_y,schools2_x,pch= 20, col='blue',lwd=0.5)#schools enlarged (pch=20)
dev.off()
schools2_y
rootdir="C:/Users/Silvio/Documents/GitHub/"
rootdir1="C:/Users/Silvio/Documents/"
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project/"))
mapdir="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir1="ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
mapdir2="ArcGIS Explorer/My Basemaps/INEGI mapa/conjunto_de_datos/"
# mapdir4="ArcGIS Explorer/My Basemaps/Diego 2010 census/scince_2010/shps/yuc/"
# mapdir5="ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/"
#Ben's code below
# loc <- read.csv("catalogo de municipios.csv");head(loc)
# colnames(loc) <- c("CVE_ENT", "NAME_ENT", "CVE_MUN", "NAME_MUN")
# rural<-st_read( "C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/yuc_ageb_rural.shp",quiet=T,stringsAsFactors = F)#Encuesta intercensal
# urbana<- st_read(paste0(rootdir,mapdir1,"yuc_ageb_urbana.shp"),quiet=T)#encuesta intercensal
# encuesta<-read.csv(paste0(rootdir,mapdir1,"catalogos/localidades urbanas y rurales amanzanadas.csv"),
#                    header=T)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
# Encuesta 2015, but same issue that can't geolocate these
# 611 unique localities
#head(rural)
# tmp <- left_join(rural, loc)
# head(tmp)
# ?left_join.sf
#
# tmp1 <- rural$geometry[1]
# # tmp1
# ?`cartography-package`
# getBorders(tmp1)
# runif
###########################################################################################
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
municipios<- read.csv("catalogo de municipios_mod.csv",header=T,stringsAsFactors = F)#;View(municipios)
municipios$Nombre.del.Municipio <- toupper(municipios$Nombre.del.Municipio)
#INEGI mapa
# mex2 <- st_read("Shapefiles/MEX_adm2.shp",quiet=T,stringsAsFactors = F)
# mex2 <- subset(mex2, mex2$ID_1==31)
# # st_bbox(mex2[1,])#get bbox of first line
# length(unique(urbana2$nombre))#340 loclaities
#has good locality names
addresses2 <- read.csv("Linux Data/addresses2_mod2.csv",header=T,stringsAsFactors = F)
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
# urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
# urbana4 <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/yuc_limite_localidad.shp",quiet=T,stringsAsFactors = F);View(urbana4)
# length(unique(urbana4$NOMBRE))
#389 localities
# View(urbana_mun)
####################################################################
####Example
#library(rgdal)
# nad83_coords <- data.frame(x=c(577430), y=c(2323270)) # My coordinates in NAD83
# nad83_coords <- nad83_coords *.3048 ## Feet to meters
# coordinates(nad83_coords) <- c('x', 'y')
# proj4string(nad83_coords)=CRS("+init=esri:102272") # West Illinois
# ## Erroneous code, NAD83 to NAD83
# ## coordinates_deg <- spTransform(nad83_coords,CRS("+init=epsg:3436"))
# ## Corrected with WGS84 to yield Lat/Long
# coordinates_deg <- spTransform(nad83_coords,CRS("+init=epsg:4326"))
# coordinates_deg
# #############################################
# ?st_transform()
#############################################
#CHecking which localities from addresses2 are missing in urbana2
missing_urbana2=NULL
# missing_urbana4=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==F ){#if the address is not in urbana2 (==FALSE)
missing_urbana2[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
# View(which(!is.na(urbana2_hits)))#2715 urban hits ie the file names match up, out of 3291!
#Copy
# urbana4_hits=NULL
# for (i in seq(addresses2$LOCALIDAD)){
#   if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE==T ){#if the address is not in urbana2 (==FALSE)
#     urbana4_hits[i]=addresses2$LOCALIDAD[i]
#   }
#   else if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE){
#     next
#   }
# }
# urbana4_hits <- (which(!is.na(urbana4_hits)))
##Creating vector of municipios from addresses2 that are in rural file municipalities
nombre.municipios <- municipios$Nombre.del.Municipio
rural_hits=NULL
for (i in seq(addresses2$MUNICIPIO)){
if (addresses2$MUNICIPIO[i] %in% nombre.municipios==T){#if the municipality is in rural.shp
rural_hits[i]=addresses2$MUNICIPIO[i]
}
else {
next
}
}
# rural_hits <- (which(!is.na(rural_hits)))
length((unique(rural_hits)))#106 municipalities and all match!
# head(which(!is.na(urbana2_hits)))
#######################################################################################################
#Fixing up the mex2 data
# mex2$NAME_2 <- iconv(mex2$NAME_2,from="UTF-8",to="ASCII//TRANSLIT");View(mex2)
# #now, capitalizing
# mex2$NAME_2 <- toupper(mex2$NAME_2)
#
# #CHecking which localities from addresses2 are missing in mex2 (municipalities)
# missing_mex2=NULL
# for (i in seq(addresses2$MUNICIPIO)){
#   if (addresses2$MUNICIPIO[i] %in% mex2$NAME_2==F ){#if the address is not in urbana2 (==FALSE)
#     missing_mex2[i]=addresses2$MUNICIPIO[i]
#   }
#   else if (addresses2$MUNICIPIO[i] %in% mex2$NAME_2){
#     next
#   }
# }
#findings: there are 106 municipios, and they exactly match up with addresses2 number of municipios, along with
#number of polygons so each polygon corresponds exactly to 1 municipio
###############################################################################################
####################################################################################################
##TO COUNT HOW MANY additional SCHOOL HITS FROM urbana2 by LOCALITY NAME
#for each i, change the addresses2_hits for that value i position (urbana2_hits[i]) to "success"
#for i in addresses2_hits, if if that ith position is equal to one
# of the position numbers in addresses2_hits, AND
#urbana2_hits$HITS contains ZERO_RESULTS, and , then replace that value with "locality matches!"
#Creating vector of localities from addresses2 that are in urbana2
urbana2_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==T ){#if the address is not in urbana2 (==FALSE)
urbana2_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
urbana2_hits <- (which(!is.na(urbana2_hits)))
#new modified addresses with hits from Linux
####
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F)#;View(addresses2_hits)
for (i in seq(length(addresses2_hits$LAT_HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$LAT_HITS[i]))==T){
addresses2_hits$LAT_HITS[i] <- "locality matches!" #phrase: "locality matches!"
addresses2_hits$LNG_HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
##TO COUNT HOW MANY additional SCHOOL HITS for municipalities (just those left over)
for (i in seq(length(addresses2_hits$LAT_HITS))){
if ((grepl("ZERO_RESULTS",addresses2_hits$LAT_HITS[i]))==T){
addresses2_hits$LAT_HITS[i] <- "municipality matches!" #phrase: "municipality matches!"
addresses2_hits$LNG_HITS[i] <- "municipality matches!" #phrase: "municipality matches!"
}
}
View(addresses2_hits)
####
# for (i in seq(length(addresses2_hits$HITS))){
#   if ((i %in% urbana4_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
#     addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
#   }
# }
# View(addresses2_hits)
#HOW TO CREATE A FUNCTION BASED ON THIS??
# add_school_hits=function(hits_vec,phrase){
#   for (i in seq(length(addresses2_hits$HITS))){
#     if ((i %in% hits_vec && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){#hits_vec is urbana2_hits
#       addresses2_hits$HITS[i] <- phrase #phrase: "locality matches!"
#     }
#   }
# }
# add_school_hits(urbana2_hits,"locality matches")
length(which(addresses2_hits$LAT_HITS=="locality matches!"))#1373 additional hits (versus 998 before)! (urbana2)
length(which(addresses2_hits$LAT_HITS=="municipality matches!"))#543 add hits! ()
length(addresses2_hits$LAT_HITS)-1373-543#1374
# length(which(addresses2_hits$HITS=="locality matches!"))#951 add hits! (urbana4)
which(!is.na(missing_urbana2))
unique(missing_urbana2)#count unique localities
length(unique(missing_urbana2))/length(unique(addresses2$LOCALIDAD))#43% missing localities! 254/587
#587 unique localities in total, so we have 254 or about 57% of them
length(unique(missing_urbana4))/length(unique(addresses2$LOCALIDAD))#46% missing localities! 268/587
missing_urbana2[2065:2095]
#######
###############################################################################################
length(which(grepl("ZERO_RESULTS",addresses2_hits$HITS)==T))
#There should be 193, but there are just 191 no results from addresses2 (won't add up to 3290 schools)
#Figuring out Checking for those 2 missing values
hits_strings=c("ZERO","status","locality")
length(which(grepl("OK",addresses2_hits$HITS)==T))#2102 (previously 2101)
length(which(grepl("municipality",addresses2_hits$HITS)==T))#199 (vs 191)
length(which(grepl("locality",addresses2_hits$HITS)==T))#989 (vs 998)
#Now, it's good! no need for this looop anymore
# checking_status <- subset(addresses2_hits,grepl("status",addresses2_hits$HITS));head(checking_status)
# for (i in seq(checking_status$HITS)){
#   if ((grepl("OK",checking_status$HITS[i])) ==F){
#     print(checking_status[i,])
#   }
#
# }
# for (i in seq(addresses2_hits$HITS)){
#   if addresses2_hits$HITS[i] %in%
# }
#HOW TO CREATE A FUNCTION BASED ON THIS??
# add_school_hits=function(hits_vec,phrase){
#   for (i in seq(length(addresses2_hits$HITS))){
#     if ((i %in% hits_vec && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){#hits_vec is urbana2_hits
#       addresses2_hits$HITS[i] <- phrase #phrase: "locality matches!"
#     }
#   }
# }
# add_school_hits(urbana2_hits,"locality matches")
View(addresses2_hits)#works!
length(which(addresses2_hits$HITS=="locality matches!"))#998 additional hits!
which(!is.na(missing_urbana2))
unique(missing_urbana2)#count unique localities
length(unique(missing_urbana2))/length(unique(addresses2$LOCALIDAD))#43% missing localities! 254/587
#587 unique localities in total, so we have 254 or about 57% of them
length(unique(missing_urbana4))/length(unique(addresses2$LOCALIDAD))#4
library(dplyr)
rootdir="C:/Users/Silvio/Documents/GitHub/"
rootdir1="C:/Users/Silvio/Documents/"
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project/"))
mapdir="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir1="ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
mapdir2="ArcGIS Explorer/My Basemaps/INEGI mapa/conjunto_de_datos/"
####
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
####cHANGING LOCALITIES, RENAMING SOME, REMOVING OTHERS THAT ARE DUPLICATES
urbana2$nombre[162] <- "CHOLUL MERIDA"
urbana2$nombre[1] <- "TEMOZON ABALA"
urbana2 <- urbana2[-c(43,61,102,153,242,295),]
rural<-st_read(paste0(rootdir1,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
municipios<- read.csv("catalogo de municipios_mod.csv",header=T,stringsAsFactors = F)#;View(municipios)
municipios$Nombre.del.Municipio <- toupper(municipios$Nombre.del.Municipio)
municipios2 <- municipios
colnames(municipios2)[3] <- c("CVE_MUN")
rural<- left_join(rural,municipios2[3:4])
#View(rural)
addresses2_hits <- addresses2_hits[order(addresses2_hits[,5]),] ; View(addresses2_hits)
ageb <- c()
mun <- subset(addresses2_hits,(grepl("municipality matches!",addresses2_hits$LAT_HITS)))
mun<- mun$MUNICIPIO
for (i in mun) {#randomly creating various AGEB's to add to df
tmp <- rural$CVE_AGEB[rural$Nombre.del.Municipio == i]#whichever ageb's equal that iteration name
tmp1 <- sample(tmp, size = 1)#sample 1 from those ageb's
ageb <- c(ageb, tmp1)#adding to the vector every time
}
ageb
#municipality placeholder to add coordinates here, then later add to addresses2_hits
placeholder <- data.frame(Nombre.del.Municipio=mun,CVE_AGEB=ageb)%>%
left_join(rural)
View(placeholder)
####cODE For sampling random coordinates####
#For loop, nesting a while loop with target depending on the numb of schools needed
# install.packages("lwgeom")
library(lwgeom)
#First for municipalities
target=1
n <- 0
mun.coord.vector <- c()
#For every school that only identified by municipio, get random coords from that municipio
for (i in seq(placeholder$Nombre.del.Municipio)){
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) mun.coord.vector <- append(mun.coord.vector,rand.coords[1])#append each time
}
}
mun.coords <- st_coordinates(mun.coord.vector[1:length(placeholder$Nombre.del.Municipio)]);View(mun.coords)
mun.coords <- as.data.frame(mun.coords)
placeholder$mun.coords <- mun.coords[1:length(placeholder$Nombre.del.Municipio),]
loc.placeholder <- subset(addresses2_hits,(grepl("locality matches!",addresses2_hits$LAT_HITS)))
urbana2_subset <- data.frame(LOCALIDAD = urbana2$nombre,geometry = urbana2$geometry)
loc.placeholder <- left_join(loc.placeholder,urbana2_subset)#good, 1373 hits now
target=1
n <- 0
loc.coord.vector <- c()
#For every school that only identified by locality, get random coords from that locality
for (i in seq(loc.placeholder$LOCALIDAD)){#
# print("count")
n<-0
while(n < target){
rand.coords<- st_sample(loc.placeholder$geometry[i],target,"random")#+2*target
n <- length(rand.coords)
# print(n)
if (n >= target) loc.coord.vector <- append(loc.coord.vector,rand.coords[1])#append each time
}
}
loc.coords <- st_coordinates(loc.coord.vector[1:length(loc.placeholder$LOCALIDAD)]);View(loc.coords)
loc.coords <- as.data.frame(loc.coords)
loc.placeholder$loc.coords <- loc.coords[1:length(loc.placeholder$LOCALIDAD),]
addresses2_hits$LAT_HITS[2748:3290] <- mun.coords$Y
addresses2_hits$LNG_HITS[2748:3290] <- mun.coords$X
addresses2_hits$LAT_HITS[1375:2747] <- loc.coords$Y
addresses2_hits$LNG_HITS[1375:2747] <- loc.coords$X
addresses2_hits$LAT_HITS[1] <- 20.9491951
addresses2_hits$LNG_HITS[1] <- -89.66059559999999
schools2_x <- as.numeric(addresses2_hits$LAT_HITS)
schools2_y <- as.numeric(addresses2_hits$LNG_HITS)
schools2_y
png("Pictures/newshps_newschools_green_enlarged_schools.png", width=2400, height=1600, res=240)
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
# points(schools$x,schools$y,pch='.',col='blue')
# points(schools$x,schools$y,pch= 20, col='blue',lwd=0.5)#schools enlarged (pch=20)
points(schools2_y,schools2_x,pch= 20, col='blue',lwd=0.5)#schools enlarged (pch=20)
dev.off()
students
length(students$pid)
py$pid
length(py$pid)
length(py$pid)-length(student$pid)
length(py$pid)-length(students$pid)
length(students$pid)/length(py$pid)
length(students$pid)
length(py$pid)
4.6/58
105/(1330+105)
1330+105
1435/58
1.9/23
42/(424+42)
105+42+33
1374/3290
1374+1373
