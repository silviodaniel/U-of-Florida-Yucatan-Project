rm(list=ls())
url <- function(address, return.call = "json", sensor = "false") {
root <- "https://maps.googleapis.com/maps/api/geocode/"
u <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(u))
}
geoCode <- function(address,verbose=FALSE) {
if(verbose) cat(address,"\n")
u <- url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
location_type <- x$results[[1]]$geometry$location_type
formatted_address <- x$results[[1]]$formatted_address
return(c(lat, lng, location_type, formatted_address))
Sys.sleep(0.5)
} else {
return(c(NA,NA,NA,NA))
}
}
# Use plyr to ggeocoding for a vector
address <- c("The White House, Washington, DC", "The Capitol, Washington, DC")
locations <- ldply(address, function(x) geoCode(x))
names(locations) <- c("lat", "lon", "location_type", "formatted")
head(locations)
address
library(cartography)
urbana<- st_read(paste0(rootdir,mapdir2,"yuc_ageb_urbana.shp"),quiet=T)#encuesta intercensal
rootdir="C:/Users/Silvio/Documents/"
mapdir="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir2="ArcGIS Explorer/My Basemaps/encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
mapdir3="ArcGIS Explorer/My Basemaps/INEGI mapa/conjunto_de_datos/"
setwd(paste0(rootdir,"GitHub/U-of-Florida-Yucatan-Project"))
loc <- read.csv("catalogo de municipios.csv")
head(loc)
colnames(loc) <- c("CVE_ENT", "NAME_ENT", "CVE_MUN", "NAME_MUN")
urbana<- st_read(paste0(rootdir,mapdir2,"yuc_ageb_urbana.shp"),quiet=T)#encuesta intercensal
rural<-st_read(paste0(rootdir,mapdir2,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
encuesta<-read.csv(paste0(rootdir,mapdir2,"catalogos/localidades urbanas y rurales amanzanadas.csv"),
header=T)
head(rural)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
mex2 <- st_read(past0(rootdir,mapdir,"MEX_adm2.shp"),quiet=T,stringsAsFactors = F)
mex2 <- st_read(paste0(rootdir,mapdir,"MEX_adm2.shp"),quiet=T,stringsAsFactors = F)
head(mex2)
View(mex2)
urbana2<-st_read(paste0(rootdir,mapdir3,"localidad250_a.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
head(urbana2)
tail(urbana2$nombre)
tail(urban2)
tail(urbana2)
getwd()
#has good locality names
addresses2 <- read.csv("/Linux Data/addresses2_mod2.csv",header=T)
#has good locality names
addresses2 <- read.csv("Linux Data/addresses2_mod2.csv",header=T)
View(addresses2)
#CHecking if all localities from addresses2 are in urbana2
Encoding(urbana2$nombre)
tail(urbana2$nombre)
# tail(urbana2$nombre)
iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2$nombre
# tail(urbana2$nombre)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
head(urbana2)
tail(urbana2$nombre)
tail(urbana2)
urbana2$nombre[348]
urbana2$nombre[348]==addresses2$LOCALIDAD[265]
addresses2$LOCALIDAD[265]
#has good locality names
addresses2 <- read.csv("Linux Data/addresses2_mod2.csv",header=T,stringsAsFactors = F)
urbana2$nombre[348]==addresses2$LOCALIDAD[265]
addresses2$LOCALIDAD[265]
#############################################
#CHecking if all localities from addresses2 are in urbana2
Encoding(mex$nombre)
#############################################
#CHecking if all localities from addresses2 are in urbana2
Encoding(mex2$nombre)
View(urbana2)
urbana2$nombre[338]==addresses2$LOCALIDAD[2451]
seq(addresses2)
seq(addresses2$NOMBRE)
length(seq(addresses2$NOMBRE))
class(urbana2$nombre)
class(urbana2[,7])
######################################
txt=['find matches of a string in a vector of strings'
'search position of a character string in an other string'
'Compare Strings'];
txt=['find matches of a string in a vector of strings'
'search position of a character string in an other string'
'Compare Strings']
grep(txt,'strings')
'MERIDA' %in% urbana2$nombre
'TEYA' %in% urbana2$nombre
i
i=1
addresses2$NOMBRE[i]
'TEYA' !%in% urbana2$nombre
'TEYA' %!in% urbana2$nombre
addresses2$NOMBRE[i] %in% urbana2$nombre
addresses2$NOMBRE[i] %in% urbana2$nombre==F
missing_urbana2=NULL
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$NOMBRE[i]
}
}
missing_urbana2
head(missing_urbana2)
View(urbana2)
length(missing_urbana2)
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
}
missing_urbana2
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
}
missing_urbana2
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
}
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
}
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
return(head(missing_urbana2))
}
return(head(missing_urbana2))
(head(missing_urbana2))
missing_urbana2=NULL
for (i in seq(addresses2$NOMBRE)){
if (addresses2$NOMBRE[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$NOMBRE[i]
}
else if (addresses2$NOMBRE[i] %in% urbana2$nombre){
next
}
}
(head(missing_urbana2))
length(missing_urbana2)
missing_urbana2=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
missing_urbana2
missing_urbana2=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
print("success")
}
}
missing_urbana2
#only 1 name doesn't match up, shown below
which(!is.na(count[1692:1797]))
which(!is.na(missing_urbana2))
length(which(!is.na(missing_urbana2)))
missing_urbana2[2065:2095]
View(missing_urbana2)
length(which(!is.na(missing_urbana2)))/length(addresses2$LOCALIDAD)#rough percentage of localities missing
unique(missing_urbana2)
length(unique(missing_urbana2))/length(unique(addresses2$LOCALIDAD))
unique(addresses2$LOCALIDAD)
length(unique(missing_urbana2))/length(unique(addresses2$LOCALIDAD))
mex2_mun <- read.delim("~/GitHub/U-of-Florida-Yucatan-Project/MEX_adm2-mod.txt", stringsAsFactors=FALSE)
View(mex2_mun)
#######
##############################################
##importing MEX_adm2-mod.txt
attach(mex2_mun);names(mex2_mun)
#CHecking which names don't match up btw the 2 columns
count=NULL
for (i in seq(1:length(mex2_mun$OBJECTID))){
if(is.na(mex2_mun$VARNAME_2[i])){
next
# count[i]=OBJECTID[i]
}
else if(mex2_mun$NAME_2[i]!=mex2_mun$VARNAME_2[i]){
#return(OBJECTID[i])
count[i]=mex2_mun$OBJECTID[i]
}
else{
next
# print("success")
}
}
count
#CHecking which names don't match up btw the 2 columns
count=NULL
for (i in seq(1:length(mex2_mun$NAME_2))){
if(is.na(mex2_mun$VARNAME_2[i])){
next
# count[i]=OBJECTID[i]
}
else if(mex2_mun$NAME_2[i]!=mex2_mun$VARNAME_2[i]){
#return(OBJECTID[i])
count[i]=mex2_mun$NAME_2[i]
}
else{
next
# print("success")
}
}
count
length(count)-length(which(is.na(count)))
length(count[1692:1797])-length(which(is.na(count[1692:1797])))
#only 1 name doesn't match up, shown below
which(!is.na(count[1692:1797]))
count[1696]
length(unique(addresses2$LOCALIDAD))
getwd()
urbana_mun <- read.csv("localidades urbanas y rurales amanzanadas_mod.csv",header=T);head(urbana_mun)
urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T);head(urbana_mun)
View(urbana_mun)
urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(urbana_mun)
urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(urbana_mun$LOCALIDAD)
urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T);View(urbana_mun)
urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(urbana_mun$LOCALIDAD)
#649 localities
View(urbana_mun)
#649 localities
View(urbana_mun)
##
urbana<- st_read(paste0(rootdir,mapdir2,"yuc_ageb_urbana.shp"),quiet=T)#encuesta intercensal
head(urbana)
View(urbana2)
length(unique(addresses2$LOCALIDAD))
mapdir4="ARGIS Explorer/My Basemaps/Diego 2010 census/scince_2010/shps/yuc"
urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"));View(urbana3)
urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
mapdir4="ARGIS Explorer/My Basemaps/Diego 2010 census/scince_2010/shps/yuc/"
urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
mapdir4="ArcGIS Explorer/My Basemaps/Diego 2010 census/scince_2010/shps/yuc/"
urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
mapdir5="ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/"
urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
length(unique(addresses2$LOCALIDAD))
View(urbana)
length(unique(urbana$CVE_LOC))
head(urbana4)
tail(urbana4)
version
?st_read()
mex2 <- st_read(paste0(rootdir,mapdir,"MEX_adm2.shp"),quiet=T,stringsAsFactors = F)
head(mex2)
print.bbox(mex2)
print.bbox = function(x, ...) {
attr(x, "crs") = NULL
print(unclass(x))
}
print.bbox(mex2[1])
mex2[1,]
print.bbox(mex2[1,])
mex2[1]
mex2[1,]
bbox.Set = function(obj, ...) {
sel = vapply(obj, function(x) length(x) && !all(is.na(x)), TRUE)
if (! any(sel))
NA_bbox_
else
bb_wrap(CPL_get_bbox(unclass(obj)[sel], 0))
}
bbox.Set(mex2)
bb_wrap = function(bb) {
stopifnot(is.numeric(bb) && length(bb) == 4)
structure(bb, names = c("xmin", "ymin", "xmax", "ymax"), class = "bbox")
}
bbox.Set(mex2)
CPL_get_bbox <- function(sf, depth = 0L) {
.Call('_sf_CPL_get_bbox', PACKAGE = 'sf', sf, depth)
}
bbox.Set(mex2)
CPL_get_bbox(mex2,depth=0L)
CPL_get_bbox(mex2,depth=1L)
CPL_get_bbox(mex2,depth=2L)
CPL_get_bbox(mex2,depth=10L)
CPL_get_bbox(mex2)
CPL_get_bbox(mex2[1,])
class(mex2)
st_bbox(mex2)
mex2[1,]
tail(mex2)
head(mex2)
st_bbox(mex2[1,])
mex2[1,]
tail(urbana4)
length(unique(urbana4$NOMBRE))
##
urbana<- st_read(paste0(rootdir,mapdir2,"yuc_ageb_urbana.shp"),quiet=T)#encuesta intercensal
View(urbana)
length(unique(urbana$CVE_LOC))
urbana2<-st_read(paste0(rootdir,mapdir3,"localidad250_a.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
length(unique(urbana2$nombre))
length(unique(urbana_mun$LOCALIDAD))
length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
length((urbana_mun$NOMBRE.DE.LOCALIDAD))
missing_urbana2
# tail(urbana2$nombre)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
tail(urbana2)
View(urbana2)
missing_urbana2=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==F ){
missing_urbana2[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
(head(missing_urbana2))
which(!is.na(missing_urbana2))
length(which(!is.na(missing_urbana2)))#how many localities missing from urbana2
length(which(!is.na(missing_urbana2)))/length(addresses2$LOCALIDAD)#rough percentage of localities missing
unique(missing_urbana2)
length(unique(missing_urbana2))/length(unique(addresses2$LOCALIDAD))#43% missing localities!
length(unique(missing_urbana2))
length(unique(addresses2$LOCALIDAD))
length(unique(urbana4$NOMBRE))
urbana4$nombre<- iconv(urbana4$nombre,from="UTF-8",to="ASCII//TRANSLIT")
# missing_urbana2=NULL
missing_urbana4=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE==F ){
missing_urbana4[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE){
next
}
}
length(unique(missing_urbana2))
length(unique(missing_urbana4))
#587 unique localities
length(unique(missing_urbana4))/length(unique(addresses2$LOCALIDAD))#% missing localities! 268/587
missing_urbana2
unique(missing_urbana4))
unique(missing_urbana4)
unique(missing_urbana2)
View(unique(missing_urbana2))
View(unique(missing_urbana4))
length(unique(missing_urbana2))
