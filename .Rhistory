par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(urbana),add=T,col="brown")
plot(st_geometry(rural),add=T,col="#99FF99")
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(urbana2$geometry[153]),add=T, col = "red", lwd = 3)
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(urbana),add=T,col="brown")
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
plot(st_geometry(urbana2$geometry[153]),add=T, col = "red", lwd = 3)
plot(st_geometry(urbana2$geometry[317]))
urbana2$geometry[153]
urbana2$geometry[317]
?CRS
CRS()
?CRS()
rand.coords
rand.coords[1:10]
rand.coords[1]
head(rand.coords)
head(urbana2)
head(mex2)
setwd("C:/Users/Silvio/Documents/GitHub/U-of-Florida-Yucatan-Project/")
rootdir="C:/Users/Silvio/Documents/GitHub/"
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project/"))
urbana2<-st_read("Shapefiles/localidad250_a.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
urbana2<-st_read("Shapefiles/localidad250_a.shp",quiet=T,stringsAsFactors = F)#Encuesta intercensal
urbana2<-st_read("Shapefiles/localidad250_a.shp",quiet=T,stringsAsFactors = F)#Encuesta intercensal
urbana2<-st_read(paste0(rootdir,mapdir3,"localidad250_a.shp",quiet=T,stringsAsFactors = F)#Encuesta intercensal
sdflkasd
mex2 <- st_read("Shapefiles/MEX_adm2.shp",quiet=T,stringsAsFactors = F)
mex2 <- st_read("Shapefiles/MEX_adm2.shp",quiet=T,stringsAsFactors = F)
urbana2 <- st_read("Shapefiles/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
head(urbana2)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
rootdir
mapdir5
rootdir1="C:/Users/Silvio/Documents/
"
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
paste0(rootdir,mapdir5
)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
urbana4 <- st_read(paste0(rootdir1,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
paste0(rootdir1,mapdir5
)
mapdir5="ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/"
paste0(rootdir1,mapdir5
)
mapdir5
mapdir4
paste0(rootdir,mapdir4,"yuc_loc_urb.shp")
paste0(rootdir1,mapdir5,"yuc_limite_localidad.shp")
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
urbana4 <- st_read(("C:/Users/Silvio/Documents/ArcGIS Explorer/
My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/
yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
urbana4 <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/
My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/
yuc_limite_localidad.shp",quiet=T,stringsAsFactors = F);View(urbana4)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
# urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
urbana4 <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/
My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/
yuc_limite_localidad.shp",quiet=T,stringsAsFactors = F);View(urbana4)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
# urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
urbana4 <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/yuc_limite_localidad.shp",quiet=T,stringsAsFactors = F);View(urbana4)
# urbana_mun <- read.csv("Linux Data/localidades urbanas y rurales amanzanadas_mod.csv",header=T)
# urbana_mun <- subset(urbana_mun,urbana_mun$ENTIDAD==31);length(unique(urbana_mun$NOMBRE.DE.LOCALIDAD))
#611 unique localities
#
# urbana3 <- st_read(paste0(rootdir,mapdir4,"yuc_loc_urb.shp"),quiet=T,stringsAsFactors = F);View(urbana3)
# urbana4 <- st_read(paste0(rootdir,mapdir5,"yuc_limite_localidad.shp"),quiet=T,stringsAsFactors = F);View(urbana4)
urbana4 <- st_read("C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/eleccion_2010/eleccion_2010/todo/yuc/cartografiadigital_ife/yuc_limite_localidad.shp",quiet=T,stringsAsFactors = F);View(urbana4)
length(unique(urbana4$NOMBRE))
# length(unique(urbana2$nombre))#340 loclaities
#has good locality names
addresses2 <- read.csv("Linux Data/addresses2_mod2.csv",header=T,stringsAsFactors = F)
View(addresses2)
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
#Copy
urbana4_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE==T ){#if the address is not in urbana2 (==FALSE)
urbana4_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE){
next
}
}
urbana4_hits
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana4_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
length(which(addresses2_hits$HITS=="locality matches!"))
View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
urbana2_hits
length(urbana2_hits)
length(urbana4_hits)
tail(urbana2_hits)
tail(urbana4_hits)
#Creating vector of localities from addresses2 that are in urbana2
urbana2_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==T ){#if the address is not in urbana2 (==FALSE)
urbana2_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
tail(urbana2_hits)
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
urbana2_hits <- (which(!is.na(urbana2_hits)))
tail(urbana2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
i=1
i %in% urbana2_hits
head(urbana2_hits)
#############################################
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
#Creating vector of localities from addresses2 that are in urbana2
urbana2_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana2$nombre==T ){#if the address is not in urbana2 (==FALSE)
urbana2_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana2$nombre){
next
}
}
# View(which(!is.na(urbana2_hits)))#2715 urban hits ie the file names match up, out of 3291!
urbana2_hits <- (which(!is.na(urbana2_hits)))
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
#Copy
urbana4_hits=NULL
for (i in seq(addresses2$LOCALIDAD)){
if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE==T ){#if the address is not in urbana2 (==FALSE)
urbana4_hits[i]=addresses2$LOCALIDAD[i]
}
else if (addresses2$LOCALIDAD[i] %in% urbana4$NOMBRE){
next
}
}
urbana4_hits <- (which(!is.na(urbana4_hits)))
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana4_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
View(addresses2_hits)
length(which(addresses2_hits$HITS=="locality matches!"))
head(urbana4)
head(urbana)
####################################################################
##Converting coordinates from NAD83 to WGS84
library(gdal)
install.packages("gdal")
####################################################################
##Converting coordinates from NAD83 to WGS84
library(gdal)
install.packages("rgdal")
library(rgdal)
head(urbana2)
urbana2$geometry[1]
st_bbox(urbana2[1,])
class(st_bbox(urbana2[1,]))
####Example
nad83_coords <- data.frame(x=c(577430), y=c(2323270)) # My coordinates in NAD83
nad83_coords <- nad83_coords *.3048 ## Feet to meters
coordinates(nad83_coords) <- c('x', 'y')
head(nad83_coords)
nad83_coords
####Example
nad83_coords <- data.frame(x=c(577430), y=c(2323270)) # My coordinates in NAD83
nad83_coords <- nad83_coords *.3048 ## Feet to meters
head(nad83_coords)
coordinates(nad83_coords) <- c('x', 'y')
nad83_coords
class(nad83_coords)
proj4string(nad83_coords)=CRS("+init=esri:102272") # West Illinois
class(nad83_coords)
nad83_coords
## Erroneous code, NAD83 to NAD83
## coordinates_deg <- spTransform(nad83_coords,CRS("+init=epsg:3436"))
## Corrected with WGS84 to yield Lat/Long
coordinates_deg <- spTransform(nad83_coords,CRS("+init=epsg:4326"))
coordinates_deg
nad83_coords
####
urbana2[1:10]
class(nad83_coords)
urbana2
####
urbana2[1:10]
####
urbana2[1:11]
####
urbana2[1:10]
?st_transform()
st_transform(urbana2,crs=4326)
urbana2[11,]
# runif
###########################################################################################
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
#############################################
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
st_transform(urbana2,crs=4326)
urbana2[11,]
urbana2
urbana2 <- st_transform(urbana2,crs=4326)
urbana2
rand.coords[i]
sample(x = 1:n, threshold)
i
i <- sample(x = 1:n, threshold)
i
n
1:n
i
print(n)
rand.coords
rand.coords <- rand.coords[i]
rand.coords
i
##cODE For getting right amount of sampling
target=10
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
library(cartography)
library(sf)
library(sp)
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
urbana2$geometry[1]
# runif
###########################################################################################
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
#############################################
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2$geometry[1]
target=10
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
rand.coords
##cODE For getting right amount of sampling
target=10
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
plot(st_geometry(urbana2$geometry[1]))
plot(st_sample(urbana2$geometry[1],10,"random"),add=T, col='#88888888',pch=20)
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target+2*target,"random")
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
plot(st_geometry(urbana2$geometry[1]))
plot(st_sample(urbana2$geometry[1],10,"random"),add=T, col='#88888888',pch=20)
plot(st_geometry(urbana2$geometry[1]))
plot(st_sample(urbana2$geometry[1],10,"random"),add=T, col='#88888888',pch=20)
##cODE For getting right amount of sampling
target=10
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target,"random")#+2*target
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
rand.coords
urbana2 <- st_transform(urbana2,crs=4326)
head(urbana2)
urbana2$geometry[1]
##cODE For getting right amount of sampling
target=10
n <- 0
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target,"random")#+2*target
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
install.packages("lwgeom")
library(lwgeom)
while(n <= target){
rand.coords<- st_sample(urbana2$geometry[1],target,"random")#+2*target
n <- length(rand.coords)
print(n)
if (n >= target){
portion <- sample(x = 1:n, target)
rand.coords <- rand.coords[portion]#sampling from random positions (13,10,12) in rand.coords
#from above to get exactly the target of 10
}
}
rand.coords
length(which(grepl("status",addresses2_hits$HITS)==T))#2101
length(which(grepl("status",addresses2_hits$HITS)==T))#2101
length(which(grepl("municipality",addresses2_hits$HITS)==T))#191
length(which(grepl("locality",addresses2_hits$HITS)==T))#998
#new modified addresses with hits from Linux
addresses2_hits <-read.csv("Linux Data/addresses2_mod2_hits.csv",header=T,stringsAsFactors = F);View(addresses2_hits)
for (i in seq(length(addresses2_hits$HITS))){
if ((i %in% urbana2_hits && grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "locality matches!" #phrase: "locality matches!"
}
}
##TO COUNT HOW MANY additional SCHOOL HITS FROM mex2 by MUNICIPALITY NAME
for (i in seq(length(addresses2_hits$HITS))){
if ((grepl("ZERO_RESULTS",addresses2_hits$HITS[i]))==T){
addresses2_hits$HITS[i] <- "municipality matches!" #phrase: "municipality matches!"
}
}
#Figuring out Checking for those 2 missing values
hits_strings=c("ZERO","status","locality")
View(addresses2_hits)
#Figuring out Checking for those 2 missing values
hits_strings=c("ZERO","status","locality")
length(which(grepl("status",addresses2_hits$HITS)==T))#2101
which(grepl("status",addresses2_hits$HITS)==T)
(grepl("status",addresses2_hits$HITS)==T
)
checking_status <- subset(addresses2_hits,grepl("status",addresses2_hits$HITS));head(checking_status)
seq(checking_status$HITS)
head(checking_status)
checking_status[i]
i
i=1
checking_status[i,]
for (i in seq(checking_status$HITS)){
if (grepl("OK",checking_status$HITS)==F){
print(checking_status[i,])
}
}
checking_status <- subset(addresses2_hits,grepl("status",addresses2_hits$HITS));head(checking_status)
for (i in seq(checking_status$HITS)){
if (grepl("OK",checking_status$HITS)==F){
print(checking_status[i,])
}
}
warnings()
"OK" %in% checking_status$HITS[i]
i
View(checking_status)
checking_status[2101,]
#Check if one of multiple separate strings in a vector
mult_strings <- c("testing","just","because")
value <- "because"
value %in% mult_strings
#Check if one of multiple separate strings in a vector
mult_strings <- c("testing","just","because of")
value <- "because"
value %in% mult_strings
#Check if a character or phrase in a string
chars <- "test"
value <- "testing"
grepl(value, chars)
value
value <- "because"
#Check if one of multiple separate strings in a vector
mult_strings <- c("testing","just","because of")
value <- "because"
value %in% mult_strings
mult_strings %in% value
grepl(value,mult_strings)
grepl(value,mult_strings[3])
grepl("OK",checking_status$HITS[i])
i
for (i in seq(checking_status$HITS)){
if ((grepl("OK",checking_status$HITS[i])) ==F){
print(checking_status[i,])
}
}
