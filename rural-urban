setwd("C:/Users/Silvio/Documents/R/Yucatan-Project")
library(cluster)
library(dplyr)
py<-read.table(file="C:/Users/Silvio/Documents/R/Yucatan-Project/pop-yucatan/population-yucatan.txt",header=TRUE)
ly<-read.table(file="C:/Users/Silvio/Documents/R/Yucatan-Project/pop-yucatan/locations-yucatan.txt",header=TRUE)
ly$Urban=x#Create urban/rural column
colnames(ly)<-c(" id",  "type"," x","y" ,"x_ctr", "y_ctr" ,"Urban/Rural")
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
head(py)


#Distinguishing Urban and Rural Places
merida_xmin=-89.4350 
merida_ymin=20.5202 
merida_xmax=-89.3124 
merida_ymax=21.0401 ;merida_ymax

#Searches through all home coordinates and finds which fall within the borders of Merida
#ly[,3] refers to longitude column; other is latitude
#Make sure to just do homes!!
urban=which(ly[1:376400,3] > merida_xmin & ly[1:376400,3]<merida_xmax & ly[1:376400,4]>merida_ymin & ly[1:376400,4]<merida_ymax)
length(urban)/length(ly[1:376400,3])#about 2.06% of homes are in Merida
ly[,7]="rural"
ly[urban,7]="urban"
tail(ly[,7])

head(urban)
#position 1205 should be urban
ly[1205,7]#works!

#Using a function... the previous method works better since this requires a for loop
distinguish=function(long,lat){
  if (long > merida_xmin & long<merida_xmax & lat>merida_ymin & lat<merida_ymax){
    return("urban")
  }
  else{
    return("rural")
  }
}
distinguish(-90,20)#should be rural; works!
distinguish(-89.35,21)#urban
