#Search for package when don't know exact name
apt-cache search ()

#Installing
apt-get install (package)

#Viewing a file csv
column -s, -t < file.csv | less -#2 -N -S

#Changing columns orderc
paste <(cut -f2 file.txt) <(cut -f1 file.txt)
paste <(cut -f9 reformatted_catalogo_escuelas.csv) <(cut -f4 reformatted_catalogo_escuelas.csv)>escuelas2.csv
paste <(cut -f1 -d',' reformatted_catalogo_escuelas.csv) <(cut -f2 -d',' reformatted_catalogo_escuelas.csv) <(cut -f3 -d',' reformatted_catalogo_escuelas.csv) <(cut -f9 -d',' reformatted_catalogo_escuelas.csv) <(cut -f8 -d',' reformatted_catalogo_escuelas.csv) <(cut -f7 -d',' reformatted_catalogo_escuelas.csv)> escuelas2.csv

awk '{ print $2 " " $1}' file.txt
awk '{ print $9 " " $2}' reformatted_catalogo_escuelas.csv>escuelas3.csv

#Loopthrough addresses and input into Google API using wget
sed -e 's#^#https://maps.googleapis.com/maps/api/geocode/json?address=#' addresses.csv | head
sed -e 's#^#https://maps.googleapis.com/maps/api/geocode/json?address=#' addresses.csv | sed -e 's#$#\&key=AIzaSyC5JDTxSAz971VCom6YyNyYsdONDPF8b0w#'>urlqueries.out
wget -i urlqueries.out -O json_output

sed -n "2409,2415 p" addresses.csv >url_test2.csv

sed -e 's#^#https://maps.googleapis.com/maps/api/geocode/json?address=#' addresses2.csv | sed -e 's#$#\&key=AIzaSyC5JDTxSAz971VCom6YyNyYsdONDPF8b0w#'>urlqueries2.out
wget -i urlqueries2.out -O json_sorted_full_test

sed -e 's#^#https://maps.googleapis.com/maps/api/geocode/json?address=#' addresses2_second_half.csv | sed -e 's#$#\&key=AIzaSyC5JDTxSAz971VCom6YyNyYsdONDPF8b0w#'>urlqueries4_second_half.out
#addresses2.csv is sorted full data set, urlqueries2.out is full data set addresses in URL
wget -i urlqueries4_second_half.out -O json_sorted_second_half_4

head urlqueries2.out>url_sorted.csv
wget -i url_sorted.csv -O json_sorted

#sorted addresses run first 2,000 or so

#Grep to get string in file
grep -n '"geometry" : {' json_sorted_full > hits_full.csv
grep -n '"status" :' json_sorted_full > totalruns_full.csv
grep -n '"status" :' json_sorted_full.mod > totalruns_mod.csv
#Results: ran the first 2503, hits on 1571 of them! (62.8% hits)
#On second look, seems there are hits on 1331 of them (53.2% hits)

grep -n '"status" :' json_sorted_second_half > runs_second_half.csv#this one is not good
grep -n '"status" :' json_sorted_second_half_2 > runs_second_half_2.csv
#this one is very good, 768 hits, for a total now of 2099 out of total 3291 (2503+788), thus 64% hits!
grep -n '"status" :' json_sorted_second_half_3 > runs_second_half_3.csv

#Grep multiple lines
grep -E '"lat"|"lng"' json_sorted_full>test_full.txt

grep -n '"geometry" : {' json_sorted_full > hits_full.csv #https://serverfault.com/questions/410066/how-to-get-lines-that-contain-string-in-a-file
grep -n -A12 '"location" : {' foo json_output5 > test_Multiplelines.txt
grep -n -A12 '"location" : {' foo json_output5 > test_Multiplelines2.txt
#https://askubuntu.com/questions/688769/how-can-i-use-the-grep-command-to-extract-line-which-is-the-next-line-of-greping
#https://stackoverflow.com/questions/9081/grep-a-file-but-show-several-surrounding-lines

:%s/}\n{/},\r{/ json_sorted_second_half_2

#VI command to insert commas to separate outputs
#copy the file
vi json_sorted_second_half_2
:%s/}\n{/},\r{/ #to change the file
:x #to save

#To copy
cp filename newfilename


