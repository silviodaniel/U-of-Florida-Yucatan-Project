rm(list=ls())
url <- function(address, return.call = "json", sensor = "false") {
root <- "https://maps.googleapis.com/maps/api/geocode/"
u <- paste(root, return.call, "?address=", address, "&sensor=", sensor, sep = "")
return(URLencode(u))
}
geoCode <- function(address,verbose=FALSE) {
if(verbose) cat(address,"\n")
u <- url(address)
doc <- getURL(u)
x <- fromJSON(doc,simplify = FALSE)
if(x$status=="OK") {
lat <- x$results[[1]]$geometry$location$lat
lng <- x$results[[1]]$geometry$location$lng
location_type <- x$results[[1]]$geometry$location_type
formatted_address <- x$results[[1]]$formatted_address
return(c(lat, lng, location_type, formatted_address))
Sys.sleep(0.5)
} else {
return(c(NA,NA,NA,NA))
}
}
# Use plyr to ggeocoding for a vector
address <- c("The White House, Washington, DC", "The Capitol, Washington, DC")
locations <- ldply(address, function(x) geoCode(x))
names(locations) <- c("lat", "lon", "location_type", "formatted")
head(locations)
address
getwd()
rootdir="C:/Users/Silvio/Documents/GitHub/U-of-Florida-Yucatan-Project/"
setwd(paste0(rootdir,"Data/pop-yucatan/"))
getwd()
paste0(rootdir,"Data/pop-yucatan/")
setwd(paste0(rootdir,"Linux Data/pop-yucatan/"))
# setwd("C:/Users/Silvio/Documents/R/Yucatan-Project/Pictures")
# install.packages("cluster")
library(cluster)
# install.packages("dplyr")
library(dplyr)
#Haversine
#pi=3.141593
rm(pi)
hav=function(x1,y1,x2,y2){
#convert degrees to radians by multiplying by pi, dividing by 180
#y's should be latitudes and x's should be longitudes
return(12742 *asin(sqrt((sin(pi/180*(y2-y1)/2))^2
+cos(pi/180*y1)*cos(pi/180*y2)*(sin(pi/180*(x2-x1)/2))^2)))
}
12742/2
hav(-90,20,-89,20)
hav(-89.6848792716 ,20.6464119922,-89.0323486633, 20.8012998636)#=70.01462
# py$logdist=py$distance#adds new column called logdist set equal to distance
# py$logdist[which(py$logdist==0)]=5/1000##Changing the zeroes in the data to 5/1000 because cant take log(0)
# py$logdist=log10(py$logdist)#Taking log of the data for logdist
# ##py$distance=apply_dists# adds the haversine function to the distance column in population
people_mat = py[,c('pid','workid','distance')]##shortening the py matrix to 3 columns
# tail(ly)
loc_labels = ly[,c('id','type')]##**shortening the matrix of locations to these 2 columns
names(loc_labels)[1] = 'workid' #names the column workid
py<- read.table("Linux Data/pop-yucatan/population-yucatan-silvio.txt",header = T)
ly<-read.table("Linux Data/pop-yucatan/locations-yucatan-silvio.txt",header=T)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
#py<-read.table(file="C:/Users/Silvio/Documents/R/Yucatan-Project/pop-yucatan/population-yucatan.txt",header=TRUE)
# py=read.table(file="pop-yucatan/population-yucatan_old.txt",header = T)
# py<- read.table(file="population-yucatan.txt",header = T)
# ly<-read.table(file="locations-yucatan.txt",header=TRUE)
py<- read.table("population-yucatan-silvio.txt",header = T)
ly<-read.table("locations-yucatan-silvio.txt",header=T)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
#x1 and y1 refer to the home coordinates, and x2 y2 refer to the work or school
# py1<-py
head(py)
# py$logdist=py$distance#adds new column called logdist set equal to distance
# py$logdist[which(py$logdist==0)]=5/1000##Changing the zeroes in the data to 5/1000 because cant take log(0)
# py$logdist=log10(py$logdist)#Taking log of the data for logdist
# ##py$distance=apply_dists# adds the haversine function to the distance column in population
people_mat = py[,c('pid','workid','distance')]##shortening the py matrix to 3 columns
people_mat
start = Sys.time()
hav_vec=hav(py[,8],py[,9],py[,10],py[,11])##ANOTHER FAST WAY TO CALCULATE
py$distance=hav_vec
print(Sys.time()-start)
#head(py)
# py$logdist=py$distance#adds new column called logdist set equal to distance
# py$logdist[which(py$logdist==0)]=5/1000##Changing the zeroes in the data to 5/1000 because cant take log(0)
# py$logdist=log10(py$logdist)#Taking log of the data for logdist
# ##py$distance=apply_dists# adds the haversine function to the distance column in population
people_mat = py[,c('pid','workid','distance')]##shortening the py matrix to 3 columns
# tail(ly)
loc_labels = ly[,c('id','type')]##**shortening the matrix of locations to these 2 columns
names(loc_labels)[1] = 'workid' #names the column workid
movement_by_type = merge(people_mat, loc_labels)#**merging the shortened py and ly with "workid" , organized by number in dataset
#SCHOOL HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='school'],xlab="Distance Traveled (km)", main="Average Daily School Transit in Yucatan")
#WORK HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='work'],xlab="Distance Traveled (km)", main="Average Daily Work Transit in Yucatan")
#Means
mean(movement_by_type$distance[movement_by_type$type=='house'])
mean(movement_by_type$distance[movement_by_type$type=='school'])#
mean(movement_by_type$distance[movement_by_type$type=='work'])#
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
students=py[py$age>4 & py$age<18,]
schools = ly[ly$type=='school',]
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
library(cartography)
# install.packages("cluster")
library(cluster)
# install.packages("dplyr")
library(dplyr)
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
urbana2$nombre[162] <- "CHOLUL MERIDA"; urbana2$nombre[1] <- "TEMOZON ABALA"
urbana2 <- urbana2[-c(43,61,102,153,242,295),]
rural<-st_read(paste0(rootdir,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
mex0=st_read(paste0(rootdir,mapdir1,"MEX_adm0.shp"),
quiet=T)#Diva-GIS
mex1=st_read(paste0(rootdir,mapdir1,"MEX_adm1.shp"),
quiet=T)#Diva-GIS
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
rootdir="C:/Users/Silvio/Documents/GitHub/"
rootdir1="C:/Users/Silvio/Documents/"
rootdir2="C:/Users/Silvio/Documents/ArcGIS Explorer/My Basemaps/"
mapdir1="U-of-Florida-Yucatan-Project/Shapefiles/"
mapdir3="ArcGIS Explorer/My Basemaps/MEX_adm/"
mapdir2="encuesta_intercensal_2015 Diego/encuesta_intercensal_2015/shps/yuc/"
setwd(paste0(rootdir,"U-of-Florida-Yucatan-Project"))
urbana2 <- st_read("Shapefiles/INEGI mapa/localidad250_a.shp",quiet=T,stringsAsFactors = F)
urbana2$nombre<- iconv(urbana2$nombre,from="UTF-8",to="ASCII//TRANSLIT")
urbana2 <- st_transform(urbana2,crs=4326)##Converting coordinates from NAD83 to WGS84
urbana2$nombre[162] <- "CHOLUL MERIDA"; urbana2$nombre[1] <- "TEMOZON ABALA"
urbana2 <- urbana2[-c(43,61,102,153,242,295),]
rural<-st_read(paste0(rootdir,mapdir1,"yuc_ageb_rural.shp"),quiet=T,stringsAsFactors = F)#Encuesta intercensal
rural$CVE_MUN <- as.numeric(rural$CVE_MUN)
rural$CVE_ENT <- as.numeric(rural$CVE_ENT)
# length(unique(urbana$CVE_LOC))#only 20 unique localities
# View(encuesta)
# View(urbana)
# head(urbana)
# tail(urbana)
mex0=st_read(paste0(rootdir,mapdir1,"MEX_adm0.shp"),
quiet=T)#Diva-GIS
mex1=st_read(paste0(rootdir,mapdir1,"MEX_adm1.shp"),
quiet=T)#Diva-GIS
par(mar=c(2.1,2.1,2.1,2.1))#margins
plot(st_geometry(mex0))#plots all of Mexico
plot(st_geometry(mex0),xlim=c(-90.75,-87.25),ylim=c(19.5,21.75),bg="lightblue",
col="gray")#takes all Mexico plot, plot just Yucatan
# plot(st_geometry(mex2),add=T,col="#99FF99")
# plot(st_geometry(mex2.1),add=T,col="#99FF99")
plot(st_geometry(rural),add=T,col="#99FF99")
plot(st_geometry(urbana2),add=T,col="white")
points(students$x1,students$y1,pch='.',col='red')
#
points(schools$x,schools$y,pch='.',col='blue')
points(schools$x,schools$y,pch= 20, col='blue',lwd=0.5)#schools enlarged (pch=20)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
#x1 and y1 refer to the home coordinates, and x2 y2 refer to the work or school
# py1<-py
head(py)
start = Sys.time()
hav_vec=hav(py[,8],py[,9],py[,10],py[,11])##ANOTHER FAST WAY TO CALCULATE
py$distance=hav_vec
print(Sys.time()-start)
people_mat = py[,c('pid','workid','distance')]##shortening the py matrix to 3 columns
# head(people_mat)
# people_log = py[,c('pid','workid','logdist')]##shortening the py matrix to 3 columns
# tail(people_log)
# head(py)
# head(ly)
# tail(ly)
loc_labels = ly[,c('id','type')]##**shortening the matrix of locations to these 2 columns
names(loc_labels)[1] = 'workid' #names the column workid
movement_by_type = merge(people_mat, loc_labels)#**merging the shortened py and ly with "workid" , organized by number in dataset
#movement by type has houses, schools, work, organized by work id and pid; histogram the distances separete as types (school or work)
# movement_by_log = merge(people_log, loc_labels)
#SCHOOL HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='school'],xlab="Distance Traveled (km)", main="Average Daily School Transit in Yucatan")
#Means
mean(movement_by_type$distance[movement_by_type$type=='house'])
mean(movement_by_type$distance[movement_by_type$type=='school'])#
rm(list=ls())
py
rootdir="C:/Users/Silvio/Documents/GitHub/U-of-Florida-Yucatan-Project/"
setwd(paste0(rootdir,"Linux Data/pop-yucatan/"))
# setwd("C:/Users/Silvio/Documents/R/Yucatan-Project/Pictures")
# install.packages("cluster")
library(cluster)
# install.packages("dplyr")
library(dplyr)
#py<-read.table(file="C:/Users/Silvio/Documents/R/Yucatan-Project/pop-yucatan/population-yucatan.txt",header=TRUE)
# py=read.table(file="pop-yucatan/population-yucatan_old.txt",header = T)
# py<- read.table(file="population-yucatan.txt",header = T)
# ly<-read.table(file="locations-yucatan.txt",header=TRUE)
py<- read.table("population-yucatan-silvio.txt",header = T)
ly<-read.table("locations-yucatan-silvio.txt",header=T)
ly$hid=ly$id
ly$workid=ly$id
py=left_join(py,ly[,c("hid","x","y")],by="hid")#adding 2 columns in py (after workid) with house x y coordinates
py=left_join(py,ly[,c("workid","x","y")],by="workid")
colnames(py)<-c("pid","hid","age","sex","hh_serial","pernum","workid","x1","y1","x2","y2")
#x1 and y1 refer to the home coordinates, and x2 y2 refer to the work or school
# py1<-py
head(py)
rm(pi)
hav=function(x1,y1,x2,y2){
#convert degrees to radians by multiplying by pi, dividing by 180
#y's should be latitudes and x's should be longitudes
return(12742 *asin(sqrt((sin(pi/180*(y2-y1)/2))^2
+cos(pi/180*y1)*cos(pi/180*y2)*(sin(pi/180*(x2-x1)/2))^2)))
}
12742/2
hav(-89.6848792716 ,20.6464119922,-89.0323486633, 20.8012998636)#=70.01462
####Creating distance column with haversine
start = Sys.time()
hav_vec=hav(py[,8],py[,9],py[,10],py[,11])##ANOTHER FAST WAY TO CALCULATE
py$distance=hav_vec
print(Sys.time()-start)
#head(py)
pi
people_mat = py[,c('pid','workid','distance')]##shortening the py matrix to 3 columns
# head(people_mat)
# people_log = py[,c('pid','workid','logdist')]##shortening the py matrix to 3 columns
# tail(people_log)
# head(py)
# head(ly)
# tail(ly)
loc_labels = ly[,c('id','type')]##**shortening the matrix of locations to these 2 columns
names(loc_labels)[1] = 'workid' #names the column workid
movement_by_type = merge(people_mat, loc_labels)#**merging the shortened py and ly with "workid" , organized by number in dataset
#movement by type has houses, schools, work, organized by work id and pid; histogram the distances separete as types (school or work)
# movement_by_log = merge(people_log, loc_labels)
# head(movement_by_type)
# head(movement_by_log)
# tail(movement_by_type)
#View(movement_by_type)
#??in merge, are we merging people_mt and loc_labels with "workid" and organizing the distances by their workid?
table(movement_by_type$distance[movement_by_type$type=='house'])#gives number of people working from home (distance 0)
#which is 620859
#WORK HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='work'],xlab="Distance Traveled (km)", main="Average Daily Work Transit in Yucatan")
#SCHOOL HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='school'],xlab="Distance Traveled (km)", main="Average Daily School Transit in Yucatan")
mean(movement_by_type$distance[movement_by_type$type=='school'])#
mean(movement_by_type$distance[movement_by_type$type=='work'])#
#WORK HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='work'],xlab="Distance Traveled (km)", main="Average Daily Work Transit in Yucatan")
#SCHOOL HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='school'],xlab="Distance Traveled (km)", main="Average Daily School Transit in Yucatan")
par(mar=c(2.1,2.1,2.1,2.1))#margins
#WORK HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='work'],xlab="Distance Traveled (km)", main="Average Daily Work Transit in Yucatan")
#SCHOOL HISTOGRAM
hist(movement_by_type$distance[movement_by_type$type=='school'],xlab="Distance Traveled (km)", main="Average Daily School Transit in Yucatan")
#reproduced old mean of 34.4 km
#13.9 km old data
#13.86 new data
# table(movement_by_type$distance[movement_by_type$type=='house'])
# table(movement_by_type$distance[movement_by_type$type=='work'])
median(movement_by_type$distance[movement_by_type$type=='school'])#
#reproduced old median of 46.0km
#.705km new data
median(movement_by_type$distance[movement_by_type$type=='work'])#
mean(movement_by_type$distance[movement_by_type$type=='work'])#
#reproduced old median of 46.0km
#.705km old data
#0.682 NEW DATA
median(movement_by_type$distance[movement_by_type$type=='work'])#
